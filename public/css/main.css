* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;

  font-weight: 500;
  transition: .15s;
}

body {
  background-color: var(--bg-third);
}

:root {
  --bg-blue: rgb(29, 119, 255);
  --bg-primary: rgb(255, 255, 255);
  --bg-secondary: rgb(0, 0, 0);
  ---: #00bd95;
  --backendColor: rgba(0, 0, 0, 0.201);
  --bg-third: #f8f9f9;
  --bg-fourth: #eaededa0;
  --bg-fourth-hover: #eaededef;
  --filter-color: #00000019;
  --border-color: #00000036;
  --bg-fifth: #f2f3f4;
}

.darkMode {
  --bg-blue: rgb(29, 119, 255);
  --bg-primary: rgb(0, 0, 0);
  --bg-secondary: rgb(255, 255, 255);
  --bg-third: #333333;
  --bg-fourth: #1f2929;
  --backendColor: rgba(255, 255, 255, 0.081);
  --filter-color: #fffefe29;
  --border-color: #ffffff46;
  --bg-fourth-hover: #5b5959ef;
  --bg-fifth: #162424a8;
}

svg {
  width: 20px;
  height: 20px;
  stroke-width: 2;
}

.c-s-s {
  display: flex;
  justify-content: start;
  align-items: start;
  flex-direction: column;
}

.c-s-c {
  display: flex;
  justify-content: start;
  align-items: center;
  flex-direction: column;
}

.c-e-s {
  display: flex;
  justify-content: end;
  align-items: start;
  flex-direction: column;
}

.r-c-e {
  display: flex;
  justify-content: center;
  align-items: end;
  flex-direction: row;
}

.c-s-e {
  display: flex;
  justify-content: start;
  align-items: end;
  flex-direction: column;
}

.r-s-s {
  display: flex;
  justify-content: start;
  align-items: start;
  flex-direction: row;
}

.r-s-c {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  flex-direction: row;
}

.r-c-c {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}

.r-p-s {
  display: flex;
  justify-content: space-evenly;
  align-items: start;
  flex-direction: row;
}

.r-b-s {
  display: flex;
  justify-content: space-between;
  align-items: start;
  flex-direction: row;
}

.r-e-s {
  display: flex;
  justify-content: flex-end;
  align-items: start;
  flex-direction: row;
}

.r-b-c {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: row;
}

.r-p-c {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  flex-direction: row;
}


.r-p-c {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  flex-direction: row;
}

.r-e-c {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-direction: row;
}

.r-s-e {
  display: flex;
  justify-content: start;
  align-items: end;
  flex-direction: row;
}

.c-c-s {
  display: flex;
  justify-content: center;
  align-items: start;
  flex-direction: column;
}

.c-c-c {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.c-e-c {
  display: flex;
  justify-content: end;
  align-items: center;
  flex-direction: column;
}

.c-b-c {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: column;
}

.c-b-e {
  display: flex;
  justify-content: space-between;
  align-items: end;
  flex-direction: column;
}

.r-e-e {
  display: flex;
  justify-content: end;
  align-items: end;
  flex-direction: row;
}

.c-e-e {
  display: flex;
  justify-content: end;
  align-items: end;
  flex-direction: column;
}

.c-p-c {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  flex-direction: column;
}

.c-p-s {
  display: flex;
  justify-content: space-evenly;
  align-items: start;
  flex-direction: column;
}

.c-b-s {
  display: flex;
  justify-content: space-between;
  align-items: start;
  flex-direction: column;
}

.r-w {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: start;
}

.r-w-p-s {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: start;
}

.r-w-p-c {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  align-items: center;
}

.r-w-b-c {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

.r-w-s-s {
  display: flex;
  flex-wrap: wrap;
  justify-content: start;
  align-items: start;
}


.r-p-e {
  display: flex;
  justify-content: space-evenly;
  align-items: end;
}



.inputCustomInput:not(:placeholder-shown)~.cntSvgCustomInput>*,
.inputCustomInput:focus~.cntSvgCustomInput>* {
  stroke-width: 2;
}

.inputCustomInput:not(:placeholder-shown)~.labelCustomInput,
.inputCustomInput:focus~.labelCustomInput {
  opacity: .8;
  font-size: 12px;
  transform: translateY(-14px);
}

.scrl_none::-webkit-scrollbar {
  display: none;
}

pre {
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  overflow-x: auto;
}

.img {
  border-radius: 50%;
  object-fit: cover;
  object-position: top;
}

.modal {
  position: fixed;
  z-index: 50;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.359);
}

h1 {
  font-weight: 800;
}

h2 {
  font-weight: 700;
}

strong {
  font-weight: 700;
}

h2 {
  font-weight: 600;
}

h3 {
  font-weight: 600;
}

p {
  font-weight: 500;
}

button {
  border: none;
  background-color: transparent;
  transition: .1s;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: solid 1px transparent;
  color: var(--bg-secondary);
  padding: 4px 10px;
  font-size: 13px;
  font-weight: 600;
}


input:focus {

  border: solid 2px var(--bg-blue);
}

input.err_inp:checked+label {
  animation: none !important;
}

input.err_inp+label {
  animation: animateInpError 1.5s infinite alternate;
}

input.err_inp {
  border: solid 2px;
  animation: animateInpError 1.5s infinite alternate;
}

@keyframes animateInpError {
  0% {
    border-color: red;
  }

  100% {
    border-color: rgba(255, 0, 0, 0.248);
  }
}

input {
  color: var(--bg-secondary);
  width: 300px;
  outline: none;
  padding: 5px;
  font-size: 16px;
  background-color: transparent;
  border-radius: 5px;
  border: solid 2px var(--border-color);
}

input.err_inp:focus {
  border: solid 2px var(--bg-blue);
  border-color: var(--bg-blue) !important;
}

label:active {
  transform: scale(.98);
}

label {
  cursor: pointer;
  font-size: 15px;
  transition: .1s;
  color: var(--bg-secondary);
}

.LabelInpInfo label {
  position: absolute;
  left: 55px;

}

.LabelInpInfo input:focus+label,
.LabelInpInfo input:not(:placeholder-shown)+label {
  transform: translateY(-16px);
  color: var(--bg-blue);
  font-size: 12px;

}

.LabelInpInfo input:focus~.iconeLabelInpinfo,
.LabelInpInfo input:not(:placeholder-shown)~.iconeLabelInpinfo {

  fill: var(--bg-blue);


}

.LabelInpInfo input:not(:placeholder-shown) {
  border: solid 2px var(--bg-blue);
}

.LabelInpInfo input {
  width: 100%;
  padding: 20px 10px 10px 60px;
  border: solid 1px rgba(0, 0, 0, 0.156);
  border-radius: 35px;
}

.LabelInpInfo textarea+label {
  position: absolute;
  font-size: 12px;
  top: 10px;
}

.LabelInpInfo textarea:focus {
  border: solid 1px var(--bg-blue);
}

.LabelInpInfo textarea {
  width: 100%;
  padding: 10px;
  min-height: 70px;
  resize: none;
  padding-top: 30px;
}

.LabelInpInfo .iconeLabelInpinfo {
  position: absolute;
  left: 20px;
}

.LabelInpInfo {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  /* max-width: 520px; */
  /* margin-bottom: 10px; */
  /* margin-left: 40px; */
}

input.inpError:not(:placeholder-shown) {
  border-color: red;
}

.LabelInpInfo input.inpError:not(:placeholder-shown)+label {
  transform: translateY(-16px);
  color: red;
  font-size: 12px;

}


.LabelInpInfo input.inpError:not(:placeholder-shown)~.iconeLabelInpinfo {

  fill: red;


}

.LabelinpSelect label {
  position: absolute;
  opacity: .7;
  left: 20px;
  /* color: var(--bg-blue); */
  top: 2px;
}

.LabelinpSelect .iconeLabelInpinfo {
  position: absolute;
  left: -35px;
  fill: var(--bg-blue);
}

.LabelinpSelect {
  display: flex;
  justify-content: start;
  align-items: center;
  position: relative;
  width: 100%;
}

.LabelinpSelect select {
  padding-top: 20px;
  border-radius: 30px;
  font-size: 15px;
  color: black;
  padding-left: 20px;
  font-weight: 900;
  width: 100%;
}


/* ------------- */
.LabelinpCheck input {
  width: 20px;
  height: 20px;
  margin-right: 15px;
}

.LabelinpCheck.err_inp label {
  color: red;

}

.LabelinpCheck {
  display: flex;
  justify-content: start;
  align-items: center;
  position: relative;
  border: solid 1px transparent;
  margin-bottom: 10px;
}

option {
  color: black;
  font-weight: 600;
}

@media screen and (max-width:768px) {

  label,
  button,
  p,
  a,
  span,
  pre {
    font-size: 10px !important;

  }

  input,
  textarea {
    font-size: 12px !important;

  }

  svg {

    width: 15px;
    height: 15px;
  }

  .LabelInpInfo input {
    width: 100%;
    padding: 10px 5px 5px 50px;
    border: solid 1px rgba(0, 0, 0, 0.156);
    border-radius: 35px;
  }
  select{
    font-size: 11px !important;
  }
  .LabelInpInfo input:focus+label,
  .LabelInpInfo input:not(:placeholder-shown)+label {
    transform: translateY(-12px);
    color: var(--bg-blue);
    font-size: 9px;

  }

}